//reg_top.h
/*
* Automatically generated by gen_c_api.py, don't edit it
*/
#ifndef __JL_REG_TOP_H__
#define __JL_REG_TOP_H__

#include <jl_types.h>
#include "jl51xx/jl51xx_drv_switch.h"

#define TOP_BASE                                                                     ((jl_uint32)0x00000000U)
#define TOP_BLOCK_SIZE                                                               ((jl_uint32)0x00200000U)

#define MAC0_USER_CTRL_OFFSET                                                        ((jl_uint32)0x00000070U)
#define MAC0_USER_CTRL_NUM                                                           ((jl_uint32)0x00000001U)
typedef union MAC0_USER_CTRL_u {
    struct {
		jl_uint32 mac_is_link:1;											//[0: 0]
		jl_uint32 mac_duplex:1;												//[1: 1]
		jl_uint32 mac_speed:1;												//[2: 2]
		jl_uint32 unused0:1;												//[3: 3]
		jl_uint32 mac_tx_fc_en:1;											//[4: 4]
		jl_uint32 mac_rx_fc_en:1;											//[5: 5]
		jl_uint32 unused1:1;												//[6: 6]
		jl_uint32 mac_force_fc_en:1;										//[7: 7]
		jl_uint32 unused2:5;												//[8: 12]
		jl_uint32 mac_rma_mode:1;											//[13: 13]
		jl_uint32 mac_force_status_en:1;									//[14: 14]
		jl_uint32 mac_sw_rst:1;												//[15: 15]
		jl_uint32 unused3:16;												//[16: 31]
    } bf;
    jl_uint32 val[1];
} MAC0_USER_CTRL_t;

#define MAC1_USER_CTRL_OFFSET                                                        ((jl_uint32)0x00000071U)
#define MAC1_USER_CTRL_NUM                                                           ((jl_uint32)0x00000001U)
typedef union MAC1_USER_CTRL_u {
    struct {
        jl_uint32 mac1_user_ctrl:16;                                        //[15: 0]
    } bf;
    jl_uint32 val[1];
} MAC1_USER_CTRL_t;

#define MAC2_USER_CTRL_OFFSET                                                        ((jl_uint32)0x00000072U)
#define MAC2_USER_CTRL_NUM                                                           ((jl_uint32)0x00000001U)
typedef union MAC2_USER_CTRL_u {
    struct {
        jl_uint32 mac2_user_ctrl:16;                                        //[15: 0]
    } bf;
    jl_uint32 val[1];
} MAC2_USER_CTRL_t;

#define MAC3_USER_CTRL_OFFSET                                                        ((jl_uint32)0x00000073U)
#define MAC3_USER_CTRL_NUM                                                           ((jl_uint32)0x00000001U)
typedef union MAC3_USER_CTRL_u {
    struct {
        jl_uint32 mac3_user_ctrl:16;                                        //[15: 0]
    } bf;
    jl_uint32 val[1];
} MAC3_USER_CTRL_t;

#define MAC4_USER_CTRL_OFFSET                                                        ((jl_uint32)0x00000074U)
#define MAC4_USER_CTRL_NUM                                                           ((jl_uint32)0x00000001U)
typedef union MAC4_USER_CTRL_u {
    struct {
        jl_uint32 mac4_user_ctrl:16;                                        //[15: 0]
    } bf;
    jl_uint32 val[1];
} MAC4_USER_CTRL_t;

#define MAC5_USER_CTRL_OFFSET                                                        ((jl_uint32)0x00000075U)
#define MAC5_USER_CTRL_NUM                                                           ((jl_uint32)0x00000001U)
typedef union MAC5_USER_CTRL_u {
    struct {
        jl_uint32 mac5_user_ctrl:16;                                        //[15: 0]
    } bf;
    jl_uint32 val[1];
} MAC5_USER_CTRL_t;

#define MAC6_USER_CTRL_OFFSET                                                        ((jl_uint32)0x00000076U)
#define MAC6_USER_CTRL_NUM                                                           ((jl_uint32)0x00000001U)
typedef union MAC6_USER_CTRL_u {
    struct {
        jl_uint32 mac6_user_ctrl:16;                                        //[15: 0]
    } bf;
    jl_uint32 val[1];
} MAC6_USER_CTRL_t;

#define MAC7_USER_CTRL_OFFSET                                                        ((jl_uint32)0x00000077U)
#define MAC7_USER_CTRL_NUM                                                           ((jl_uint32)0x00000001U)
typedef union MAC7_USER_CTRL_u {
    struct {
        jl_uint32 mac7_user_ctrl:16;                                        //[15: 0]
    } bf;
    jl_uint32 val[1];
} MAC7_USER_CTRL_t;

#define MAC8_USER_CTRL_OFFSET                                                        ((jl_uint32)0x00000078U)
#define MAC8_USER_CTRL_NUM                                                           ((jl_uint32)0x00000001U)
typedef union MAC8_USER_CTRL_u {
    struct {
        jl_uint32 mac8_user_ctrl:16;                                        //[15: 0]
    } bf;
    jl_uint32 val[1];
} MAC8_USER_CTRL_t;

#define MAC9_USER_CTRL_OFFSET                                                        ((jl_uint32)0x00000079U)
#define MAC9_USER_CTRL_NUM                                                           ((jl_uint32)0x00000001U)
typedef union MAC9_USER_CTRL_u {
    struct {
        jl_uint32 mac9_user_ctrl:16;                                        //[15: 0]
    } bf;
    jl_uint32 val[1];
} MAC9_USER_CTRL_t;

#define LOAD_GO_OFFSET                                                               ((jl_uint32)0x000000F0U)
#define LOAD_GO_NUM                                                                  ((jl_uint32)0x00000001U)
typedef union LOAD_GO_u {
    struct {
        jl_uint32 load_go:16;                                               //[15: 0]
    } bf;
    jl_uint32 val[1];
} LOAD_GO_t;

#define LOAD_DATA0_OFFSET                                                            ((jl_uint32)0x000000F1U)
#define LOAD_DATA0_NUM                                                               ((jl_uint32)0x00000001U)
typedef union LOAD_DATA0_u {
    struct {
        jl_uint32 load_data0:16;                                            //[15: 0]
    } bf;
    jl_uint32 val[1];
} LOAD_DATA0_t;

#define LOAD_DATA1_OFFSET                                                            ((jl_uint32)0x000000F2U)
#define LOAD_DATA1_NUM                                                               ((jl_uint32)0x00000001U)
typedef union LOAD_DATA1_u {
    struct {
        jl_uint32 load_data1:16;                                            //[15: 0]
    } bf;
    jl_uint32 val[1];
} LOAD_DATA1_t;

#define LOAD_DATA2_OFFSET                                                            ((jl_uint32)0x000000F3U)
#define LOAD_DATA2_NUM                                                               ((jl_uint32)0x00000001U)
typedef union LOAD_DATA2_u {
    struct {
        jl_uint32 load_data2:16;                                            //[15: 0]
    } bf;
    jl_uint32 val[1];
} LOAD_DATA2_t;

#define LOAD_DATA3_OFFSET                                                            ((jl_uint32)0x000000F4U)
#define LOAD_DATA3_NUM                                                               ((jl_uint32)0x00000001U)
typedef union LOAD_DATA3_u {
    struct {
        jl_uint32 load_data3:16;                                            //[15: 0]
    } bf;
    jl_uint32 val[1];
} LOAD_DATA3_t;

#define LOAD_DATA4_OFFSET                                                            ((jl_uint32)0x000000F5U)
#define LOAD_DATA4_NUM                                                               ((jl_uint32)0x00000001U)
typedef union LOAD_DATA4_u {
    struct {
        jl_uint32 load_data4:16;                                            //[15: 0]
    } bf;
    jl_uint32 val[1];
} LOAD_DATA4_t;

#define LOAD_DATA5_OFFSET                                                            ((jl_uint32)0x000000F6U)
#define LOAD_DATA5_NUM                                                               ((jl_uint32)0x00000001U)
typedef union LOAD_DATA5_u {
    struct {
        jl_uint32 load_data5:16;                                            //[15: 0]
    } bf;
    jl_uint32 val[1];
} LOAD_DATA5_t;

#define LOAD_DATA6_OFFSET                                                            ((jl_uint32)0x000000F7U)
#define LOAD_DATA6_NUM                                                               ((jl_uint32)0x00000001U)
typedef union LOAD_DATA6_u {
    struct {
        jl_uint32 load_data6:16;                                            //[15: 0]
    } bf;
    jl_uint32 val[1];
} LOAD_DATA6_t;

#define LOAD_DATA7_OFFSET                                                            ((jl_uint32)0x000000F8U)
#define LOAD_DATA7_NUM                                                               ((jl_uint32)0x00000001U)
typedef union LOAD_DATA7_u {
    struct {
        jl_uint32 load_data7:16;                                            //[15: 0]
    } bf;
    jl_uint32 val[1];
} LOAD_DATA7_t;

#define CPU_ENC_ADDR_OFFSET                                                          ((jl_uint32)0x000000FCU)
#define CPU_ENC_ADDR_NUM                                                             ((jl_uint32)0x00000001U)
typedef union CPU_ENC_ADDR_u {
    struct {
        jl_uint32 cpu_enc_addr:16;                                          //[15: 0]
    } bf;
    jl_uint32 val[1];
} CPU_ENC_ADDR_t;

#define CPU_PC_HIGH_OFFSET                                                           ((jl_uint32)0x000000FDU)
#define CPU_PC_HIGH_NUM                                                              ((jl_uint32)0x00000001U)
typedef union CPU_PC_HIGH_u {
    struct {
        jl_uint32 cpu_pc_hi:16;                                             //[15: 0]
    } bf;
    jl_uint32 val[1];
} CPU_PC_HIGH_t;

#define CPU_PC_LOW_OFFSET                                                            ((jl_uint32)0x000000FEU)
#define CPU_PC_LOW_NUM                                                               ((jl_uint32)0x00000001U)
typedef union CPU_PC_LOW_u {
    struct {
        jl_uint32 cpu_pc_lo:16;                                             //[15: 0]
    } bf;
    jl_uint32 val[1];
} CPU_PC_LOW_t;

#define TIMER_MATCH_OFFSET                                                           ((jl_uint32)0x00000110U)
#define TIMER_MATCH_NUM                                                              ((jl_uint32)0x00000001U)
typedef union TIMER_MATCH_u {
    struct {
        jl_uint32 timer_match:16;                                           //[15: 0]
    } bf;
    jl_uint32 val[1];
} TIMER_MATCH_t;

#define TIMER_OFFSET                                                                 ((jl_uint32)0x00000111U)
#define TIMER_NUM                                                                    ((jl_uint32)0x00000001U)
typedef union TIMER_u {
    struct {
        jl_uint32 timer:16;                                                 //[15: 0]
    } bf;
    jl_uint32 val[1];
} TIMER_t;

#define TIMER_CFG_OFFSET                                                             ((jl_uint32)0x00000112U)
#define TIMER_CFG_NUM                                                                ((jl_uint32)0x00000001U)
typedef union TIMER_CFG_u {
    struct {
        jl_uint32 timer_interval:2;                                         //[ 1: 0]
        jl_uint32 timer_clr:1;                                              //[ 2: 2]
        jl_uint32 timer_en:1;                                               //[ 3: 3]
        jl_uint32 timer_mode:1;                                             //[ 4: 4]
    } bf;
    jl_uint32 val[1];
} TIMER_CFG_t;

#define WATCH_OFFSET                                                                 ((jl_uint32)0x00000113U)
#define WATCH_NUM                                                                    ((jl_uint32)0x00000001U)
typedef union WATCH_u {
    struct {
        jl_uint32 watchdog_en:1;                                            //[ 0: 0]
        jl_uint32 cpu_reset:1;                                              //[ 1: 1]
    } bf;
    jl_uint32 val[1];
} WATCH_t;

#define SW_RSVD0_OFFSET                                                              ((jl_uint32)0x00000150U)
#define SW_RSVD0_NUM                                                                 ((jl_uint32)0x00000001U)
typedef union SW_RSVD0_u {
    struct {
        jl_uint32 sw_rsvd0:16;                                              //[15: 0]
    } bf;
    jl_uint32 val[1];
} SW_RSVD0_t;

#define SW_RSVD1_OFFSET                                                              ((jl_uint32)0x00000151U)
#define SW_RSVD1_NUM                                                                 ((jl_uint32)0x00000001U)
typedef union SW_RSVD1_u {
    struct {
        jl_uint32 sw_rsvd1:16;                                              //[15: 0]
    } bf;
    jl_uint32 val[1];
} SW_RSVD1_t;

#define SW_RSVD2_OFFSET                                                              ((jl_uint32)0x00000152U)
#define SW_RSVD2_NUM                                                                 ((jl_uint32)0x00000001U)
typedef union SW_RSVD2_u {
    struct {
        jl_uint32 sw_rsvd2:16;                                              //[15: 0]
    } bf;
    jl_uint32 val[1];
} SW_RSVD2_t;

#define SW_RSVD3_OFFSET                                                              ((jl_uint32)0x00000153U)
#define SW_RSVD3_NUM                                                                 ((jl_uint32)0x00000001U)
typedef union SW_RSVD3_u {
    struct {
        jl_uint32 sw_rsvd3:16;                                              //[15: 0]
    } bf;
    jl_uint32 val[1];
} SW_RSVD3_t;

#define SW_RSVD4_OFFSET                                                              ((jl_uint32)0x00000154U)
#define SW_RSVD4_NUM                                                                 ((jl_uint32)0x00000001U)
typedef union SW_RSVD4_u {
    struct {
        jl_uint32 sw_rsvd4:16;                                              //[15: 0]
    } bf;
    jl_uint32 val[1];
} SW_RSVD4_t;

#define SW_RSVD5_OFFSET                                                              ((jl_uint32)0x00000155U)
#define SW_RSVD5_NUM                                                                 ((jl_uint32)0x00000001U)
typedef union SW_RSVD5_u {
    struct {
        jl_uint32 sw_rsvd5:16;                                              //[15: 0]
    } bf;
    jl_uint32 val[1];
} SW_RSVD5_t;

#define SW_RSVD6_OFFSET                                                              ((jl_uint32)0x00000156U)
#define SW_RSVD6_NUM                                                                 ((jl_uint32)0x00000001U)
typedef union SW_RSVD6_u {
    struct {
        jl_uint32 sw_rsvd6:16;                                              //[15: 0]
    } bf;
    jl_uint32 val[1];
} SW_RSVD6_t;

#define SW_RSVD7_OFFSET                                                              ((jl_uint32)0x00000157U)
#define SW_RSVD7_NUM                                                                 ((jl_uint32)0x00000001U)
typedef union SW_RSVD7_u {
    struct {
        jl_uint32 sw_rsvd7:16;                                              //[15: 0]
    } bf;
    jl_uint32 val[1];
} SW_RSVD7_t;

#define SW_RSVD8_OFFSET                                                              ((jl_uint32)0x00000158U)
#define SW_RSVD8_NUM                                                                 ((jl_uint32)0x00000001U)
typedef union SW_RSVD8_u {
    struct {
        jl_uint32 sw_rsvd8:16;                                              //[15: 0]
    } bf;
    jl_uint32 val[1];
} SW_RSVD8_t;

#define SW_RSVD9_OFFSET                                                              ((jl_uint32)0x00000159U)
#define SW_RSVD9_NUM                                                                 ((jl_uint32)0x00000001U)
typedef union SW_RSVD9_u {
    struct {
        jl_uint32 sw_rsvd9:16;                                              //[15: 0]
    } bf;
    jl_uint32 val[1];
} SW_RSVD9_t;

#define SW_RSVD10_OFFSET                                                             ((jl_uint32)0x0000015AU)
#define SW_RSVD10_NUM                                                                ((jl_uint32)0x00000001U)
typedef union SW_RSVD10_u {
    struct {
        jl_uint32 sw_rsvd10:16;                                             //[15: 0]
    } bf;
    jl_uint32 val[1];
} SW_RSVD10_t;

#define SW_RSVD11_OFFSET                                                             ((jl_uint32)0x0000015BU)
#define SW_RSVD11_NUM                                                                ((jl_uint32)0x00000001U)
typedef union SW_RSVD11_u {
    struct {
        jl_uint32 sw_rsvd11:16;                                             //[15: 0]
    } bf;
    jl_uint32 val[1];
} SW_RSVD11_t;

#define SW_RSVD12_OFFSET                                                             ((jl_uint32)0x0000015CU)
#define SW_RSVD12_NUM                                                                ((jl_uint32)0x00000001U)
typedef union SW_RSVD12_u {
    struct {
        jl_uint32 sw_rsvd12:16;                                             //[15: 0]
    } bf;
    jl_uint32 val[1];
} SW_RSVD12_t;

#define SW_RSVD13_OFFSET                                                             ((jl_uint32)0x0000015DU)
#define SW_RSVD13_NUM                                                                ((jl_uint32)0x00000001U)
typedef union SW_RSVD13_u {
    struct {
        jl_uint32 sw_rsvd13:16;                                             //[15: 0]
    } bf;
    jl_uint32 val[1];
} SW_RSVD13_t;

#define SW_RSVD14_OFFSET                                                             ((jl_uint32)0x0000015EU)
#define SW_RSVD14_NUM                                                                ((jl_uint32)0x00000001U)
typedef union SW_RSVD14_u {
    struct {
        jl_uint32 sw_rsvd14:16;                                             //[15: 0]
    } bf;
    jl_uint32 val[1];
} SW_RSVD14_t;

#define EFUSE_0_OFFSET                                                               ((jl_uint32)0x00000170U)
#define EFUSE_0_NUM                                                                  ((jl_uint32)0x00000001U)
typedef union EFUSE_0_u {
    struct {
        jl_uint32 efuse_q:8;                                                //[ 7: 0]
    } bf;
    jl_uint32 val[1];
} EFUSE_0_t;

#define EFUSE_1_OFFSET                                                               ((jl_uint32)0x00000171U)
#define EFUSE_1_NUM                                                                  ((jl_uint32)0x00000001U)
typedef union EFUSE_1_u {
    struct {
        jl_uint32 efuse_a:10;                                               //[ 9: 0]
        jl_uint32 efuse_csb:1;                                              //[10:10]
        jl_uint32 efuse_strobe:1;                                           //[11:11]
        jl_uint32 efuse_load:1;                                             //[12:12]
        jl_uint32 efuse_pgenb:1;                                            //[13:13]
    } bf;
    jl_uint32 val[1];
} EFUSE_1_t;

#define MDIO_PAGE_CFG_0_OFFSET                                                       ((jl_uint32)0x00000190U)
#define MDIO_PAGE_CFG_0_NUM                                                          ((jl_uint32)0x00000001U)
typedef union MDIO_PAGE_CFG_0_u {
    struct {
        jl_uint32 page_sel_addr:6;                                          //[ 5: 0]
        jl_uint32 page_sel_support:1;                                       //[ 6: 6]
        jl_uint32 page_sel_write:1;                                         //[ 7: 7]
    } bf;
    jl_uint32 val[1];
} MDIO_PAGE_CFG_0_t;

#define MDIO_PAGE_CFG_1_OFFSET                                                       ((jl_uint32)0x00000191U)
#define MDIO_PAGE_CFG_1_NUM                                                          ((jl_uint32)0x00000001U)
typedef union MDIO_PAGE_CFG_1_u {
    struct {
        jl_uint32 page_sel_val:16;                                          //[15: 0]
    } bf;
    jl_uint32 val[1];
} MDIO_PAGE_CFG_1_t;

#define MDIO_CFG_0_OFFSET                                                            ((jl_uint32)0x00000192U)
#define MDIO_CFG_0_NUM                                                               ((jl_uint32)0x00000001U)
typedef union MDIO_CFG_0_u {
    struct {
        jl_uint32 phyid_zero_broadcast:1;                                   //[ 0: 0]
        jl_uint32 preamble_match_count:8;                                   //[ 8: 1]
        jl_uint32 preamble_supression:1;                                    //[ 9: 9]
        jl_uint32 global_access_0_15:1;                                     //[10:10]
    } bf;
    jl_uint32 val[1];
} MDIO_CFG_0_t;

#define MDIO_CFG_1_OFFSET                                                            ((jl_uint32)0x00000193U)
#define MDIO_CFG_1_NUM                                                               ((jl_uint32)0x00000001U)
typedef union MDIO_CFG_1_u {
    struct {
        jl_uint32 legal_phy_addr_mask:5;                                    //[ 4: 0]
        jl_uint32 legal_phy_addr:5;                                         //[ 9: 5]
    } bf;
    jl_uint32 val[1];
} MDIO_CFG_1_t;

#define MDIO_CFG_2_OFFSET                                                            ((jl_uint32)0x00000194U)
#define MDIO_CFG_2_NUM                                                               ((jl_uint32)0x00000001U)
typedef union MDIO_CFG_2_u {
    struct {
        jl_uint32 remap_phyaddr0:5;                                         //[ 4: 0]
        jl_uint32 remap_phyaddr1:5;                                         //[ 9: 5]
        jl_uint32 remap_phyaddr2:5;                                         //[14:10]
    } bf;
    jl_uint32 val[1];
} MDIO_CFG_2_t;

#define MDIO_CFG_3_OFFSET                                                            ((jl_uint32)0x00000195U)
#define MDIO_CFG_3_NUM                                                               ((jl_uint32)0x00000001U)
typedef union MDIO_CFG_3_u {
    struct {
        jl_uint32 remap_phyaddr3:5;                                         //[ 4: 0]
        jl_uint32 remap_phyaddr4:5;                                         //[ 9: 5]
        jl_uint32 remap_phyaddr5:5;                                         //[14:10]
    } bf;
    jl_uint32 val[1];
} MDIO_CFG_3_t;

#define MDIO_CFG_4_OFFSET                                                            ((jl_uint32)0x00000196U)
#define MDIO_CFG_4_NUM                                                               ((jl_uint32)0x00000001U)
typedef union MDIO_CFG_4_u {
    struct {
        jl_uint32 remap_phyaddr6:5;                                         //[ 4: 0]
        jl_uint32 remap_phyaddr7:5;                                         //[ 9: 5]
    } bf;
    jl_uint32 val[1];
} MDIO_CFG_4_t;

#define RSV0_OFFSET                                                                  ((jl_uint32)0x000001B0U)
#define RSV0_NUM                                                                     ((jl_uint32)0x00000001U)
typedef union RSV0_u {
    struct {
        jl_uint32 rsv0:16;                                                  //[15: 0]
    } bf;
    jl_uint32 val[1];
} RSV0_t;

#define RSV1_OFFSET                                                                  ((jl_uint32)0x000001B1U)
#define RSV1_NUM                                                                     ((jl_uint32)0x00000001U)
typedef union RSV1_u {
    struct {
        jl_uint32 rsv1:16;                                                  //[15: 0]
    } bf;
    jl_uint32 val[1];
} RSV1_t;

#define RSV2_OFFSET                                                                  ((jl_uint32)0x000001B2U)
#define RSV2_NUM                                                                     ((jl_uint32)0x00000001U)
typedef union RSV2_u {
    struct {
        jl_uint32 rsv2:16;                                                  //[15: 0]
    } bf;
    jl_uint32 val[1];
} RSV2_t;

#define RSV3_OFFSET                                                                  ((jl_uint32)0x000001B3U)
#define RSV3_NUM                                                                     ((jl_uint32)0x00000001U)
typedef union RSV3_u {
    struct {
        jl_uint32 rsv3:16;                                                  //[15: 0]
    } bf;
    jl_uint32 val[1];
} RSV3_t;

#define RSV4_OFFSET                                                                  ((jl_uint32)0x000001B4U)
#define RSV4_NUM                                                                     ((jl_uint32)0x00000001U)
typedef union RSV4_u {
    struct {
        jl_uint32 rsv4:16;                                                  //[15: 0]
    } bf;
    jl_uint32 val[1];
} RSV4_t;

#define RSV5_OFFSET                                                                  ((jl_uint32)0x000001B5U)
#define RSV5_NUM                                                                     ((jl_uint32)0x00000001U)
typedef union RSV5_u {
    struct {
        jl_uint32 rsv5:16;                                                  //[15: 0]
    } bf;
    jl_uint32 val[1];
} RSV5_t;

#define RSV6_OFFSET                                                                  ((jl_uint32)0x000001B6U)
#define RSV6_NUM                                                                     ((jl_uint32)0x00000001U)
typedef union RSV6_u {
    struct {
        jl_uint32 rsv6:16;                                                  //[15: 0]
    } bf;
    jl_uint32 val[1];
} RSV6_t;

#define RSV7_OFFSET                                                                  ((jl_uint32)0x000001B7U)
#define RSV7_NUM                                                                     ((jl_uint32)0x00000001U)
typedef union RSV7_u {
    struct {
        jl_uint32 rsv7:16;                                                  //[15: 0]
    } bf;
    jl_uint32 val[1];
} RSV7_t;

#define RSV8_OFFSET                                                                  ((jl_uint32)0x000001B8U)
#define RSV8_NUM                                                                     ((jl_uint32)0x00000001U)
typedef union RSV8_u {
    struct {
        jl_uint32 rsv8:16;                                                  //[15: 0]
    } bf;
    jl_uint32 val[1];
} RSV8_t;

#define RSV9_OFFSET                                                                  ((jl_uint32)0x000001B9U)
#define RSV9_NUM                                                                     ((jl_uint32)0x00000001U)
typedef union RSV9_u {
    struct {
        jl_uint32 rsv9:16;                                                  //[15: 0]
    } bf;
    jl_uint32 val[1];
} RSV9_t;

#define RSV10_OFFSET                                                                 ((jl_uint32)0x000001BAU)
#define RSV10_NUM                                                                    ((jl_uint32)0x00000001U)
typedef union RSV10_u {
    struct {
        jl_uint32 rsv10:16;                                                 //[15: 0]
    } bf;
    jl_uint32 val[1];
} RSV10_t;

#define RSV11_OFFSET                                                                 ((jl_uint32)0x000001BBU)
#define RSV11_NUM                                                                    ((jl_uint32)0x00000001U)
typedef union RSV11_u {
    struct {
        jl_uint32 rsv11:16;                                                 //[15: 0]
    } bf;
    jl_uint32 val[1];
} RSV11_t;

#define RSV12_OFFSET                                                                 ((jl_uint32)0x000001BCU)
#define RSV12_NUM                                                                    ((jl_uint32)0x00000001U)
typedef union RSV12_u {
    struct {
        jl_uint32 rsv12:16;                                                 //[15: 0]
    } bf;
    jl_uint32 val[1];
} RSV12_t;

#define RSV13_OFFSET                                                                 ((jl_uint32)0x000001BDU)
#define RSV13_NUM                                                                    ((jl_uint32)0x00000001U)
typedef union RSV13_u {
    struct {
        jl_uint32 rsv13:16;                                                 //[15: 0]
    } bf;
    jl_uint32 val[1];
} RSV13_t;

#define RSV14_OFFSET                                                                 ((jl_uint32)0x000001BEU)
#define RSV14_NUM                                                                    ((jl_uint32)0x00000001U)
typedef union RSV14_u {
    struct {
        jl_uint32 rsv14:16;                                                 //[15: 0]
    } bf;
    jl_uint32 val[1];
} RSV14_t;

#define RSV15_OFFSET                                                                 ((jl_uint32)0x000001D0U)
#define RSV15_NUM                                                                    ((jl_uint32)0x00000001U)
typedef union RSV15_u {
    struct {
        jl_uint32 rsv15:16;                                                 //[15: 0]
    } bf;
    jl_uint32 val[1];
} RSV15_t;

#define I2C_CFG_OFFSET                                                               ((jl_uint32)0x000002D0U)
#define I2C_CFG_NUM                                                                  ((jl_uint32)0x00000001U)
typedef union I2C_CFG_u {
    struct {
        jl_uint32 i2c_valid:1;                                              //[ 0: 0]
        jl_uint32 i2c_op:3;                                                 //[ 3: 1]
    } bf;
    jl_uint32 val[1];
} I2C_CFG_t;

#define I2C_CTRL_HI_OFFSET                                                           ((jl_uint32)0x000002D1U)
#define I2C_CTRL_HI_NUM                                                              ((jl_uint32)0x00000001U)
typedef union I2C_CTRL_HI_u {
    struct {
        jl_uint32 i2c_ctrl_hi:16;                                           //[15: 0]
    } bf;
    jl_uint32 val[1];
} I2C_CTRL_HI_t;

#define I2C_CTRL_LO_OFFSET                                                           ((jl_uint32)0x000002D2U)
#define I2C_CTRL_LO_NUM                                                              ((jl_uint32)0x00000001U)
typedef union I2C_CTRL_LO_u {
    struct {
        jl_uint32 i2c_ctrl_lo:16;                                           //[15: 0]
    } bf;
    jl_uint32 val[1];
} I2C_CTRL_LO_t;

#define I2C_STAT_HI_OFFSET                                                           ((jl_uint32)0x000002D3U)
#define I2C_STAT_HI_NUM                                                              ((jl_uint32)0x00000001U)
typedef union I2C_STAT_HI_u {
    struct {
        jl_uint32 i2c_status_hi:16;                                         //[15: 0]
    } bf;
    jl_uint32 val[1];
} I2C_STAT_HI_t;

#define I2C_STAT_LO_OFFSET                                                           ((jl_uint32)0x000002D4U)
#define I2C_STAT_LO_NUM                                                              ((jl_uint32)0x00000001U)
typedef union I2C_STAT_LO_u {
    struct {
        jl_uint32 i2c_status_lo:16;                                         //[15: 0]
    } bf;
    jl_uint32 val[1];
} I2C_STAT_LO_t;

#define I2C_INNER_CFG_OFFSET                                                         ((jl_uint32)0x000002D5U)
#define I2C_INNER_CFG_NUM                                                            ((jl_uint32)0x00000001U)
typedef union I2C_INNER_CFG_u {
    struct {
        jl_uint32 i2c_inner_valid:1;                                        //[ 0: 0]
        jl_uint32 i2c_inner_op:3;                                           //[ 3: 1]
    } bf;
    jl_uint32 val[1];
} I2C_INNER_CFG_t;

#define I2C_INNER_CTRL_HI_OFFSET                                                     ((jl_uint32)0x000002D6U)
#define I2C_INNER_CTRL_HI_NUM                                                        ((jl_uint32)0x00000001U)
typedef union I2C_INNER_CTRL_HI_u {
    struct {
        jl_uint32 i2c_inner_ctrl_hi:16;                                     //[15: 0]
    } bf;
    jl_uint32 val[1];
} I2C_INNER_CTRL_HI_t;

#define I2C_INNER_CTRL_LO_OFFSET                                                     ((jl_uint32)0x000002D7U)
#define I2C_INNER_CTRL_LO_NUM                                                        ((jl_uint32)0x00000001U)
typedef union I2C_INNER_CTRL_LO_u {
    struct {
        jl_uint32 i2c_inner_ctrl_lo:16;                                     //[15: 0]
    } bf;
    jl_uint32 val[1];
} I2C_INNER_CTRL_LO_t;

#define I2C_INNER_STAT_HI_OFFSET                                                     ((jl_uint32)0x000002D8U)
#define I2C_INNER_STAT_HI_NUM                                                        ((jl_uint32)0x00000001U)
typedef union I2C_INNER_STAT_HI_u {
    struct {
        jl_uint32 i2c_inner_status_hi:16;                                   //[15: 0]
    } bf;
    jl_uint32 val[1];
} I2C_INNER_STAT_HI_t;

#define I2C_INNER_STAT_LO_OFFSET                                                     ((jl_uint32)0x000002D9U)
#define I2C_INNER_STAT_LO_NUM                                                        ((jl_uint32)0x00000001U)
typedef union I2C_INNER_STAT_LO_u {
    struct {
        jl_uint32 i2c_inner_status_lo:16;                                   //[15: 0]
    } bf;
    jl_uint32 val[1];
} I2C_INNER_STAT_LO_t;

#endif /* __JL_REG_TOP_H__ */

